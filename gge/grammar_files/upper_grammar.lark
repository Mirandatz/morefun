start       : _NL* rule+
rule        : NONTERMINAL ":" (layer | block | optimizer)
NONTERMINAL : NAME

block        : block_option ("|" block_option)*
block_option : maybe_merge symbol_range+ maybe_fork _NL*
maybe_merge  : [MERGE]
maybe_fork   : [FORK]

symbol_range : NONTERMINAL ["~" RANGE_BOUND [".." RANGE_BOUND]]
RANGE_BOUND  : INT

layer        : (conv_layer | max_pooling_layer | avg_pooling_layer | batchnorm_layer | activation_layer) _NL*

activation_layer : RELU | GELU | SWISH

conv_layer   : CONV2D filter_count kernel_size strides
filter_count : FILTER_COUNT _int_args
kernel_size  : KERNEL_SIZE _int_args
strides      : STRIDE _int_args

batchnorm_layer : BATCHNORM

max_pooling_layer : MAX_POOL2D pool_sizes strides
avg_pooling_layer : AVG_POOL2D pool_sizes strides
pool_sizes        : POOL_SIZE _int_args

optimizer : (sgd | adam) _NL*

sgd           : SGD learning_rate momentum nesterov
learning_rate : LEARNING_RATE _float_args
momentum      : MOMENTUM _float_args
nesterov      : NESTEROV _bool_args

adam : ADAM learning_rate beta1 beta2 epsilon amsgrad
beta1: BETA1 _float_args
beta2: BETA2 _float_args
epsilon: EPSILON _float_args
amsgrad: AMSGRAD _bool_args

_int_args : INT_ARG
          | "(" INT_ARG ("|" INT_ARG)* ")"
INT_ARG   : INT

_float_args : FLOAT_ARG
            | "(" FLOAT_ARG ("|" FLOAT_ARG)* ")"
FLOAT_ARG   : FLOAT

_bool_args : BOOL_ARG
           | "(" BOOL_ARG ("|" BOOL_ARG)* ")"
BOOL_ARG   : BOOL


%import .terminals (MERGE, FORK, BOOL, RELU, GELU, SWISH)

%import .terminals.CONV         -> CONV2D
%import .terminals.FILTER_COUNT -> FILTER_COUNT 
%import .terminals.KERNEL_SIZE  -> KERNEL_SIZE
%import .terminals.STRIDE       -> STRIDE

%import .terminals.MAX_POOL  -> MAX_POOL2D
%import .terminals.AVG_POOL  -> AVG_POOL2D
%import .terminals.POOL_SIZE -> POOL_SIZE

%import .terminals.BATCHNORM -> BATCHNORM

%import .terminals.SGD           -> SGD
%import .terminals.LEARNING_RATE -> LEARNING_RATE
%import .terminals.MOMENTUM      -> MOMENTUM
%import .terminals.NESTEROV      -> NESTEROV

%import .terminals.ADAM    -> ADAM
%import .terminals.BETA1   -> BETA1
%import .terminals.BETA2   -> BETA2
%import .terminals.EPSILON -> EPSILON
%import .terminals.AMSGRAD -> AMSGRAD


%import common (INT, FLOAT)
%import common.NEWLINE -> _NL
%import common.CNAME -> NAME
%import common.WS_INLINE

%ignore WS_INLINE
