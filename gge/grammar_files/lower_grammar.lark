start: backbone optimizer

backbone : block+
block    : MERGE? layer FORK?
layer    : random_flip
         | random_rotation
         | resizing
         | conv
         | maxpool
         | avgpool
         | batchnorm
         | activation

random_flip     : RANDOM_FLIP FLIP_MODE
random_rotation : RANDOM_ROTATION FLOAT
resizing        : RESIZING height width
height          : HEIGHT INT
width           : WIDTH INT

conv         : CONV filter_count kernel_size stride
filter_count : FILTER_COUNT INT
kernel_size  : KERNEL_SIZE INT
stride       : STRIDE INT

maxpool  : MAXPOOL pool_size stride
avgpool  : AVGPOOL pool_size stride
pool_size : POOL_SIZE INT
 
batchnorm : BATCHNORM

activation : RELU | GELU | SWISH

optimizer: sgd | adam

sgd           : SGD learning_rate momentum nesterov
learning_rate : LEARNING_RATE FLOAT
momentum      : MOMENTUM FLOAT
nesterov      : NESTEROV BOOL

adam    : ADAM learning_rate beta1 beta2 epsilon amsgrad
beta1   : BETA1 FLOAT
beta2   : BETA2 FLOAT
epsilon : EPSILON FLOAT
amsgrad : AMSGRAD BOOL

// using multiple imports just for aesthetic reasons
%import .terminals (RANDOM_FLIP, FLIP_MODE, RANDOM_ROTATION)
%import .terminals (RESIZING, HEIGHT, WIDTH)
%import .terminals (MERGE, FORK)
%import .terminals (RELU, GELU, SWISH)
%import .terminals (CONV, FILTER_COUNT, KERNEL_SIZE, STRIDE)
%import .terminals (MAXPOOL, AVGPOOL, POOL_SIZE)
%import .terminals (BATCHNORM)
%import .terminals (SGD, LEARNING_RATE, MOMENTUM, NESTEROV)
%import .terminals (ADAM, BETA1, BETA2, EPSILON, AMSGRAD)
%import .terminals (BOOL)

%import common.INT
%import common.NUMBER -> FLOAT
%import common.WS

%ignore WS
