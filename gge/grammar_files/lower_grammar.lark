start: data_augmentation backbone optimizer

data_augmentation : DATA_AUGMENTATION rotation width_shift height_shift zoom horizontal_flip vertical_flip
rotation          : ROTATION FLOAT
width_shift       : WIDTH_SHIFT FLOAT
height_shift      : HEIGHT_SHIFT FLOAT
zoom              : ZOOM FLOAT
horizontal_flip   : HORIZONTAL_FLIP BOOL
vertical_flip     : VERTICAL_FLIP BOOL

backbone : block+
block    : MERGE? layer FORK?
layer    : conv
         | maxpool
         | avgpool
         | batchnorm
         | activation
    
conv         : CONV filter_count kernel_size stride
filter_count : FILTER_COUNT INT
kernel_size  : KERNEL_SIZE INT
stride       : STRIDE INT

maxpool  : MAXPOOL pool_size stride
avgpool  : AVGPOOL pool_size stride
pool_size : POOL_SIZE INT
 
batchnorm : BATCHNORM

activation : RELU | GELU | SWISH

optimizer: sgd | adam

sgd           : SGD learning_rate momentum nesterov
learning_rate : LEARNING_RATE FLOAT
momentum      : MOMENTUM FLOAT
nesterov      : NESTEROV BOOL

adam    : ADAM learning_rate beta1 beta2 epsilon amsgrad
beta1   : BETA1 FLOAT
beta2   : BETA2 FLOAT
epsilon : EPSILON FLOAT
amsgrad : AMSGRAD BOOL

// using multiple imports just for aesthetic reasons
%import .terminals (DATA_AUGMENTATION, ROTATION, WIDTH_SHIFT, HEIGHT_SHIFT)
%import .terminals (ZOOM, HORIZONTAL_FLIP, VERTICAL_FLIP)
%import .terminals (MERGE, FORK)
%import .terminals (RELU, GELU, SWISH)
%import .terminals (CONV, FILTER_COUNT, KERNEL_SIZE, STRIDE)
%import .terminals (MAXPOOL, AVGPOOL, POOL_SIZE)
%import .terminals (BATCHNORM)
%import .terminals (SGD, LEARNING_RATE, MOMENTUM, NESTEROV)
%import .terminals (ADAM, BETA1, BETA2, EPSILON, AMSGRAD)
%import .terminals (BOOL)

%import common (INT, FLOAT)
%import common.WS

%ignore WS
